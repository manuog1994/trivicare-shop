webpackHotUpdate("app",{

/***/ "./node_modules/extract-css-chunks-webpack-plugin/dist/loader.js?!./node_modules/@nuxt/postcss8/node_modules/css-loader/dist/cjs.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/@nuxt/postcss8/node_modules/postcss-loader/dist/cjs.js?!./node_modules/sass-loader/dist/cjs.js?!./node_modules/sass-resources-loader/lib/loader.js?!./node_modules/vue-loader/lib/index.js?!./components/CheckoutContainer.vue?vue&type=style&index=0&id=8e559ee0&lang=scss&":

  !*** ./node_modules/extract-css-chunks-webpack-plugin/dist/loader.js??ref--9-oneOf-1-0!./node_modules/@nuxt/postcss8/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/@nuxt/postcss8/node_modules/postcss-loader/dist/cjs.js??ref--9-oneOf-1-2!./node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!./node_modules/sass-resources-loader/lib/loader.js??ref--9-oneOf-1-4!./node_modules/vue-loader/lib??vue-loader-options!./components/CheckoutContainer.vue?vue&type=style&index=0&id=8e559ee0&lang=scss& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by extract-css-chunks-webpack-plugin\nmodule.exports = {};\n    if(true) {\n      // 1672873998681\n      var cssReload = __webpack_require__(/*! ./node_modules/extract-css-chunks-webpack-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/extract-css-chunks-webpack-plugin/dist/hmr/hotModuleReplacement.js\")(module.i, {\"reloadAll\":true,\"hmr\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXh0cmFjdC1jc3MtY2h1bmtzLXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPyEuL25vZGVfbW9kdWxlcy9AbnV4dC9wb3N0Y3NzOC9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvQG51eHQvcG9zdGNzczgvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8hLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPyEuL2NvbXBvbmVudHMvQ2hlY2tvdXRDb250YWluZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OGU1NTllZTAmbGFuZz1zY3NzJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbXBvbmVudHMvQ2hlY2tvdXRDb250YWluZXIudnVlP2M1NjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IGV4dHJhY3QtY3NzLWNodW5rcy13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNjcyODczOTk4NjgxXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIi9Vc2Vycy9tYW51ZWxvcnRlZ2FnYWxpYW5vL3dhL3RyaXZpY2FyZS1zaG9wL25vZGVfbW9kdWxlcy9leHRyYWN0LWNzcy1jaHVua3Mtd2VicGFjay1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJyZWxvYWRBbGxcIjp0cnVlLFwiaG1yXCI6dHJ1ZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/extract-css-chunks-webpack-plugin/dist/loader.js?!./node_modules/@nuxt/postcss8/node_modules/css-loader/dist/cjs.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/@nuxt/postcss8/node_modules/postcss-loader/dist/cjs.js?!./node_modules/sass-loader/dist/cjs.js?!./node_modules/sass-resources-loader/lib/loader.js?!./node_modules/vue-loader/lib/index.js?!./components/CheckoutContainer.vue?vue&type=style&index=0&id=8e559ee0&lang=scss&\n");

/***/ }),

/***/ "./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt-legacy-vue-transform!./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt%3Aimports-transform!./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt-legacy-capi-key-transform!./components/CheckoutContainer.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt-legacy-vue-transform!./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt%3Aimports-transform!./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt-legacy-capi-key-transform!./components/CheckoutContainer.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.keys.js */ \"./node_modules/core-js/modules/es.object.keys.js\");\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ \"./node_modules/core-js/modules/es.symbol.js\");\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.filter.js */ \"./node_modules/core-js/modules/es.array.filter.js\");\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"./node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"./node_modules/core-js/modules/web.dom-collections.for-each.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"./node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! regenerator-runtime/runtime.js */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"./node_modules/core-js/modules/es.object.to-string.js\");\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"./node_modules/core-js/modules/es.string.iterator.js\");\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ \"./node_modules/core-js/modules/es.function.name.js\");\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var core_js_modules_es_array_flat_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.array.flat.js */ \"./node_modules/core-js/modules/es.array.flat.js\");\n/* harmony import */ var core_js_modules_es_array_flat_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_flat_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var core_js_modules_es_array_unscopables_flat_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.unscopables.flat.js */ \"./node_modules/core-js/modules/es.array.unscopables.flat.js\");\n/* harmony import */ var core_js_modules_es_array_unscopables_flat_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_unscopables_flat_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var core_js_modules_es_object_values_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.object.values.js */ \"./node_modules/core-js/modules/es.object.values.js\");\n/* harmony import */ var core_js_modules_es_object_values_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_values_js__WEBPACK_IMPORTED_MODULE_15__);\nfunction ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}/* harmony default export */ __webpack_exports__[\"default\"] = ({components:{StripeElement:function StripeElement(){return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! @/components/StripeElement */ \"./components/StripeElement.vue\"));},Paypal:function Paypal(){return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! @/components/Paypal */ \"./components/Paypal.vue\"));}},data:function data(){return{shipping:0,selected:'Seleccione una dirección',name:'',lastname:'',address:'',optional_address:'',city:'',state:'',zipcode:'',phone:'',country:'',dni:'',disabled:true,userIdProfile:null,token_id:'',checked:false,payment:null,shippingMethod:null,initPaypal:false,initStripe:false,order_id:0,invoice_paper:false,note:'',guest:{user_id:'',user_profile_id:'',name:'',lastname:'',email:'',address:'',optional_address:'',city:'',state:'',zipcode:'',phone:'',country:'',dni:''},formHidden:true,btnGuest:true};},computed:{products:function products(){return this.$store.getters.getCart;},subTotal:function subTotal(){return this.$store.getters.getSubTotal;},total:function total(){return this.$store.getters.getTotal;},guestStore:function guestStore(){return this.$store.getters.getGuest;},cuponStore:function cuponStore(){var cupon=this.$store.getters.getCupon;var today=new Date();var expires=new Date(cupon.validity);if(expires.getDate()<=today.getDate()&&expires.getMonth()<=today.getMonth()&&expires.getFullYear()<=today.getFullYear()){return this.$notify({group:'foo',title:'Cupón caducado',text:'El cupón que has introducido ha caducado',type:'error'});}else{return cupon;}}},watch:{payment:function payment(){document.getElementById('my-account-4').classList.remove('collapse');if(this.payment=='contrareembolso'){this.shippingMethod='contrareembolso';}else{this.shippingMethod=null;}},shippingMethod:function shippingMethod(){this.disabled=false;if(this.payment!=null&&this.shippingMethod!=null&&this.disabled==false){document.getElementById('end-select').disabled=false;document.getElementById('my-account-5').classList.remove('collapse');document.getElementById('my-account-4').classList.add('collapse');document.getElementById('my-account-3').classList.add('collapse');document.getElementById('my-account-1').classList.add('collapse');}if(this.shippingMethod=='contrareembolso'){this.makeid(23);}}},mounted:function mounted(){var _this=this;return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(/*#__PURE__*/regeneratorRuntime.mark(function _callee(){return regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return _this.$axios.get('/sanctum/csrf-cookie');case 2:if(_this.guestStore.length!=0){_this.formHidden=false;document.getElementById('titleSelect').innerHTML='Su dirección de envío';document.getElementById('my-account-3').classList.remove('collapse');}case 3:case\"end\":return _context.stop();}},_callee);}))();},methods:{deleteGuest:function deleteGuest(){this.$store.commit('CLEAR_GUEST');this.formHidden=true;document.getElementById('titleSelect').innerHTML='Introduzca sus datos de envío';},onClick:function onClick(){this.createOrder();},createUser:function createUser(){var _this2=this;return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(){return regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_this2.$store.commit('SET_GUEST',_this2.guest);_this2.formHidden=false;document.getElementById('titleSelect').innerHTML='Su dirección de envío';document.getElementById('my-account-3').classList.remove('collapse');//console.log(this.guestStore);\ncase 4:case\"end\":return _context2.stop();}},_callee2);}))();},createProfile:function createProfile(){var _this3=this;return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(/*#__PURE__*/regeneratorRuntime.mark(function _callee3(){var response;return regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _this3.$axios.post('/api/register-profile',{user_id:_this3.$auth.user.id,name:_this3.name,lastname:_this3.lastname,address:_this3.address,optional_address:_this3.optional_address,city:_this3.city,state:_this3.state,zipcode:_this3.zipcode,phone:_this3.phone,country:_this3.country,dni:_this3.dni});case 2:response=_context3.sent;_this3.name='';_this3.lastname='';_this3.address='';_this3.optional_address='';_this3.city='';_this3.state='';_this3.zipcode='';_this3.phone='';_this3.country='';_this3.dni='';_this3.checked=false;_this3.disabled=true;_this3.$auth.fetchUser();_this3.$notify({type:'success',text:'Dirección creada correctamente'});case 17:case\"end\":return _context3.stop();}},_callee3);}))();},discountedPrice:function discountedPrice(product){return product.price_base-product.price_base*product.discount/100;},enableButton:function enableButton(e){this.userIdProfile=e.target.value;document.getElementById(\"my-account-3\").classList.remove(\"collapse\");},createOrder:function createOrder(){var _this4=this;return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(/*#__PURE__*/regeneratorRuntime.mark(function _callee4(){var products,cupon;return regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(!(_this4.guestStore.length!=0)){_context4.next=5;break;}_context4.next=3;return _this4.$axios.post('/api/guest-store',_this4.guestStore).then(function(res){var resp=res.data.data;var guest=_objectSpread(_objectSpread({},_this4.guestStore),{},{id:resp.id});_this4.$store.dispatch('addIdToGuest',guest);var products=JSON.stringify(_this4.$store.getters.getCart);var cupon=_this4.$store.getters.getCupon;_this4.$axios.post('/api/orders',{guest_id:_this4.guestStore.id,user_id:_this4.guestStore.user_id,user_profile_id:_this4.guestStore.user_profile_id,products:products,subTotal:_this4.$store.getters.getSubTotal,total:_this4.$store.getters.getTotal,coupon:cupon.code,shipping:_this4.shipping,shipping_method:_this4.shippingMethod,note:_this4.note,invoice_paper:_this4.invoice_paper,token_id:_this4.token_id}).then(function(res){//console.log(res.data);\nif(_this4.payment=='card'){_this4.initStripe=true;_this4.order_id=res.data.order.id;document.getElementById('end-select').hidden=true;document.getElementById('my-account-5').classList.add('collapse');}else if(_this4.payment=='paypal'){_this4.initPaypal=true;_this4.order_id=res.data.order.id;document.getElementById('end-select').hidden=true;document.getElementById('my-account-5').classList.add('collapse');}else if(_this4.payment=='contrareembolso'){_this4.$router.push('/success?payment_intent_client_secret='+_this4.token_id);}}).catch(function(err){//console.log(err);\n});});case 3:_context4.next=9;break;case 5:products=JSON.stringify(_this4.$store.getters.getCart);cupon=_this4.$store.getters.getCupon;_context4.next=9;return _this4.$axios.post('/api/orders',{guest_id:null,user_id:_this4.$auth.user.id,user_profile_id:_this4.userIdProfile,products:products,subTotal:_this4.$store.getters.getSubTotal,total:_this4.$store.getters.getTotal,coupon:cupon.code,shipping:_this4.shipping,shipping_method:_this4.shippingMethod,note:_this4.note,invoice_paper:_this4.invoice_paper,token_id:_this4.token_id}).then(function(res){if(_this4.payment=='card'){_this4.initStripe=true;_this4.order_id=res.data.order.id;document.getElementById('end-select').hidden=true;document.getElementById('my-account-5').classList.add('collapse');}else if(_this4.payment=='paypal'){_this4.initPaypal=true;_this4.order_id=res.data.order.id;document.getElementById('end-select').hidden=true;document.getElementById('my-account-5').classList.add('collapse');}else if(_this4.payment=='contrareembolso'){_this4.$router.push('/success?payment_intent_client_secret='+_this4.token_id);}}).catch(function(err){});case 9:case\"end\":return _context4.stop();}},_callee4);}))();},getShipping:function getShipping(total){if(total*1.21<50){if(this.shippingMethod=='gls'){return this.shipping=7.95;}else if(this.shippingMethod=='correos'){return this.shipping=6.95;}else if(this.shippingMethod=='contrareembolso'){return this.shipping=8.95;}}else if(total*1.21>50&&this.payment=='contrareembolso'){return'+1.75%';}else{return'Gratis';}},resendEmail:function resendEmail(){var _this5=this;return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(/*#__PURE__*/regeneratorRuntime.mark(function _callee5(){return regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _this5.$axios.post('/api/resend-email/'+_this5.$auth.user.id).then(function(res){_this5.$notify({title:'Email reenviado'});}).catch(function(error){_this5.errors=Object.values(error.response.data).flat();});case 2:case\"end\":return _context5.stop();}},_callee5);}))();},makeid:function makeid(length){var result='';var characters='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}this.token_id=result;}}});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt-legacy-vue-transform!./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt%3Aimports-transform!./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/unplugin/dist/webpack/loaders/transform.js?unpluginName=nuxt-legacy-capi-key-transform!./components/CheckoutContainer.vue?vue&type=script&lang=js&\n");

/***/ })

})