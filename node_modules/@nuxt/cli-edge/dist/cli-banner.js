/*!
 * @nuxt/cli-edge v2.16.0-27720022.54e852f (c) 2016-2022
 * Released under the MIT License
 * Repository: https://github.com/nuxt/nuxt.js
 * Website: https://nuxtjs.org
*/
'use strict';

const consola = require('consola');
const stdEnv = require('std-env');
const chalk = require('chalk');
const index = require('./cli-index.js');
const prettyBytes = require('pretty-bytes');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

const consola__default = /*#__PURE__*/_interopDefaultLegacy(consola);
const chalk__default = /*#__PURE__*/_interopDefaultLegacy(chalk);
const prettyBytes__default = /*#__PURE__*/_interopDefaultLegacy(prettyBytes);

function getMemoryUsage() {
  const { heapUsed, rss } = process.memoryUsage();
  return { heap: heapUsed, rss };
}
function getFormattedMemoryUsage() {
  const { heap, rss } = getMemoryUsage();
  return `Memory usage: ${chalk__default["default"].bold(prettyBytes__default["default"](heap))} (RSS: ${prettyBytes__default["default"](rss)})`;
}
function showMemoryUsage() {
  consola__default["default"].info(getFormattedMemoryUsage());
}

function showBanner(nuxt, showMemoryUsage = true) {
  if (stdEnv.isTest) {
    return;
  }
  if (stdEnv.isMinimal) {
    for (const listener of nuxt.server.listeners) {
      consola__default["default"].info("Listening on: " + listener.url);
    }
    return;
  }
  const titleLines = [];
  const messageLines = [];
  const { bannerColor, badgeMessages } = nuxt.options.cli;
  titleLines.push(`${chalk__default["default"][bannerColor].bold("Nuxt")} @ ${nuxt.constructor.version || "exotic"}
`);
  const label = (name) => chalk__default["default"].bold.cyan(`\u25B8 ${name}:`);
  const isDev = nuxt.options.dev;
  let _env = isDev ? "development" : "production";
  if (process.env.NODE_ENV !== _env) {
    _env += ` (${chalk__default["default"].cyan(process.env.NODE_ENV)})`;
  }
  titleLines.push(`${label("Environment")} ${_env}`);
  const isSSR = nuxt.options.render.ssr;
  const rendering = isSSR ? "server-side" : "client-side";
  titleLines.push(`${label("Rendering")}   ${rendering}`);
  const target = nuxt.options.target || "server";
  titleLines.push(`${label("Target")}      ${target}`);
  if (showMemoryUsage) {
    titleLines.push("\n" + getFormattedMemoryUsage());
  }
  for (const listener of nuxt.server.listeners) {
    messageLines.push(chalk__default["default"].bold("Listening: ") + chalk__default["default"].underline.blue(listener.url));
  }
  if (badgeMessages.length) {
    messageLines.push("", ...badgeMessages);
  }
  process.stdout.write(index.successBox(messageLines.join("\n"), titleLines.join("\n")));
}

exports.showBanner = showBanner;
exports.showMemoryUsage = showMemoryUsage;
